% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tornado_plot.R
\name{tornado_plot}
\alias{tornado_plot}
\alias{tornado_plot,ANY-method}
\alias{tornado_plot,TornadoExperiment-method}
\alias{tornado_plot,tornado_df-method}
\title{Make a tornado plot}
\usage{
tornado_plot(data, ...)

\S4method{tornado_plot}{ANY}(data, ...)

\S4method{tornado_plot}{TornadoExperiment}(data, ..., sort = NULL)

\S4method{tornado_plot}{tornado_df}(data, ...)
}
\arguments{
\item{data}{A \linkS4class{TornadoExperiment}, \code{tornado_df} or other type of
data forwarded to \code{\link[=build_tornado]{build_tornado()}}.}

\item{...}{
  Arguments passed on to \code{\link[=build_tornado]{build_tornado}}, \code{\link[=prep_tornado]{prep_tornado}}, \code{\link[=autoplot.tornado_df]{autoplot.tornado_df}}
  \describe{
    \item{\code{features}}{A \linkS4class{GRanges} or \linkS4class{GRangesList} object
containing genomic loci of interest.}
    \item{\code{width}}{An \code{integer(1)} in basepairs with respectively a
common feature width to centre features in, a size of bins to summarise
coverage in or the number of bins to summarise coverage in. Only two of
these need to be defined.}
    \item{\code{binwidth}}{An \code{integer(1)} in basepairs with respectively a
common feature width to centre features in, a size of bins to summarise
coverage in or the number of bins to summarise coverage in. Only two of
these need to be defined.}
    \item{\code{nbin}}{An \code{integer(1)} in basepairs with respectively a
common feature width to centre features in, a size of bins to summarise
coverage in or the number of bins to summarise coverage in. Only two of
these need to be defined.}
    \item{\code{pad_value}}{A \code{numeric(1)} to use for padding when
\code{\link[GenomeInfoDb:seqinfo]{seqlenghts(features)}} are unknown or
features exceed known sequence lengths.}
    \item{\code{assay_name}}{A \code{character(1)}: one of the assay names retrieved by
\code{assayNames(tornado)}.}
    \item{\code{upper}}{Limits to the colour scale. Can be one of the following:
\itemize{
\item A \code{numeric} to set absolute limits directly.
\item A \code{character} in the form of a number prefixed by \code{"p"} or \code{"q"} to set
the percentile or quantile respectively. For example, \code{"p99"} and \code{"q0.95"}
set the limit to the 99th percentile or 0.95th quantile respectively. The
limits as specified in the \code{lower} and \code{upper} arguments can be overridden
if the \code{scale} argument has non-default limits.
}}
    \item{\code{lower}}{Limits to the colour scale. Can be one of the following:
\itemize{
\item A \code{numeric} to set absolute limits directly.
\item A \code{character} in the form of a number prefixed by \code{"p"} or \code{"q"} to set
the percentile or quantile respectively. For example, \code{"p99"} and \code{"q0.95"}
set the limit to the 99th percentile or 0.95th quantile respectively. The
limits as specified in the \code{lower} and \code{upper} arguments can be overridden
if the \code{scale} argument has non-default limits.
}}
    \item{\code{scale_title}}{A \code{character(1)} with the title for the colourbar. Can
be overridden when the \code{scale} argument has a non-default name.}
    \item{\code{scale}}{A \link[ggplot2:scale_colour_continuous]{continuous fill scale} from
the ggplot2 package to use to colour the tornado. When \code{NULL} (default),
the scale will be retrieved from the option \code{"tornadoplot.default.scale"}.}
    \item{\code{facet}}{A \code{logical(1)} or ggplot2 facet. If \code{TRUE}, a
\code{\link[=facet_tornado]{facet_tornado()}} is added. If \code{FALSE}, no facet will
be added. When a ggplot2 facet, the facet is added to the plot.}
    \item{\code{x_scale}}{A \code{logical(1)} or ggplot2 x scale. If \code{TRUE}, an x scale is
added that attempts to avoid overlapping labels.}
    \item{\code{y_scale}}{A \code{logical(1)} or ggplot2 y scale. If \code{TRUE}, a y scale is
added that marks regular intervals but only labels the number of features.}
  }}

\item{sort}{A \code{logical(1)}. Should the tornado be sorted from high to low?
Does not apply for the \code{tornado_df} method.}
}
\value{
Prints a plot as a side effect. Returns a \code{TornadoExperiment} with
the plot in the \code{\link[S4Vectors:Annotated-class]{metadata()}} slot. When
\code{data} is a \code{tornado_df} object, instead it returns the plot as-is.
}
\description{
The \code{tornado_plot()} function exists to easily jot down a tornado plot. The
idea behind this function is that whenever you're in doubt on how to plot
your tornado data, this is the function that tries to figure it out for you.
}
\section{Methods (by class)}{
\itemize{
\item \code{ANY}: The \code{...} argument is forwarded to
\code{\link[=build_tornado]{build_tornado()}}.

\item \code{TornadoExperiment}: The \code{...} argument is forwarded to
\code{\link[=prep_tornado]{prep_tornado()}}.

\item \code{tornado_df}: The \code{...} argument is forwarded to
\code{\link[=autoplot.tornado_df]{autoplot()}}.
}}

\examples{
# These features and data aren't really pretty
feats <- dummy_features()
data  <- dummy_granges_data()

# This will extract and plot the data. The extracted data is now stored in x.
x <- tornado_plot(data, features = feats, width = 3000)

# `x` is the data underlying the plot in an TornadoExperiment object.
print(x)

# The plot generated above is stored in the metadata
metadata(x)$plot

# Or the plot can be recomputed from the data
tornado_plot(x)
}
