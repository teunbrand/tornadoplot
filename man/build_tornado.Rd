% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_tornado.R
\name{build_tornado}
\alias{build_tornado}
\title{Acquire tornado plot data}
\usage{
build_tornado(
  features,
  data,
  width = 4000,
  binwidth = 25,
  nbin = NULL,
  ...,
  pad_value = 0
)
}
\arguments{
\item{features}{A \linkS4class{GRanges} or \linkS4class{GRangesList} object
containing genomic loci of interest.}

\item{data}{The data source to get coverages. Either a \linkS4class{GRanges},
\linkS4class{GRangesList}, \linkS4class{TabixFile},
\linkS4class{BigWigFile}, \linkS4class{BigWigFileList} object or
\code{character} path to \code{.bw} files.}

\item{width, binwidth, nbin}{An \code{integer(1)} in basepairs with respectively a
common feature width to centre features in, a size of bins to summarise
coverage in or the number of bins to summarise coverage in. Only two of
these need to be defined.}

\item{...}{Arguments used for \linkS4class{TabixFile} input (see single cell
data section in details):
\describe{
\item{\code{barcode_column}}{An \code{integer(1)} for which column in the
\linkS4class{TabixFile} are barcodes, typically describing cells in single
cell assays.}
\item{\code{barcode_groups}}{A (named) \code{list} of barcodes wherein every element
is a \code{character} vector with barcodes that belong to the same groups,
typically clusters of cells.}
}}

\item{pad_value}{A \code{numeric(1)} to use for padding when
\code{\link[GenomeInfoDb:seqinfo]{seqlenghts(features)}} are unknown or
features exceed known sequence lengths.}
}
\value{
A \linkS4class{TornadoExperiment} object with the following populated
slots:
\describe{
\item{assays}{Has an \verb{n features} × \verb{m samples} × \verb{o bins} 3D
array with coverage data.}
\item{colData}{Information that could be derived from the \code{data} argument.}
\item{rowRanges}{Flattened and resized \code{GRanges} derived from the
\code{features} argument}
\item{rowData}{Has a \code{feature_set} column. See the 'Features' details
subsection.}
\item{binData}{A \linkS4class{DataFrame} with a \code{bin_id} and \code{range}
column.}
}
}
\description{
Aggregates coverage data in an array. Coverage can be read in from
\linkS4class{BigWigFile}s or computed from a \linkS4class{GRanges} object or
a \linkS4class{TabixFile}.
}
\details{
\subsection{Features}{

The genomic ranges provided as the \code{features} argument get
\code{\link[GenomicRanges:intra-range-methods]{resize}}d to all have widths equal to
the (computed) \code{width} argument, with fixed centres. Features with a negative
strand will have their output flipped in the output, such that stranded
features yield 5' -> 3' coverage data. If this is undesired, the features can
be \code{\link[BiocGenerics:strand]{unstrand}}ed to prevent this flipping. When
the \code{features} are provided as a \linkS4class{GRangesList}, every list
element is interpreted as part of a different feature set. Internally these
get unlisted an their set membership is tracked as the \code{feature_set} column
in the \code{rowData} slot.
}

\subsection{Data}{
\subsection{Bulk data}{

If the data is a (set of) bigwig files, the output is constructed through the
\code{\link[rtracklayer:BigWigFile]{summary()}} method for bigwig files. For
other types of data, the \code{\link[GenomicRanges:coverage-methods]{coverage()}} is
computed at the locations of the features. This basepair resolution coverage
is subsequently binned and averaged.
}

\subsection{Single cell data}{

A popular format for storing single cell chromatin data is as a
\linkS4class{TabixFile}. For example, the 10x Genomics 'cellranger' pipeline
for single cell ATAC-seq produces a
\href{https://support.10xgenomics.com/single-cell-atac/software/pipelines/latest/output/fragments}{fragments}
tabix file, wherein the 4th column indicates the barcode of a
cell. When the \code{data} argument is a tabix file, the \code{barcode_column} argument
instructs this function where to look for barcodes. The list elements of the
\code{barcode_groups} argument can then be matched against that column in the
tabix file to extract the data for every group of cells. Next, the coverage
for every group of cells is calculated, binned and averaged in the same way
bulk data is.
}

}
}
\examples{
# Some very small features and data that works
feats <- dummy_features()
dat   <- dummy_granges_data()

# Make a tornado
tor   <- build_tornado(feats, dat, width = 2000)

# Plotting the tornado
autoplot(tor)
}
