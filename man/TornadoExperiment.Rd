% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_tornado_experiment.R
\docType{class}
\name{TornadoExperiment-class}
\alias{TornadoExperiment-class}
\alias{new_TornadoExperiment}
\alias{TornadoExperiment}
\alias{binData}
\alias{binData,TornadoExperiment-method}
\alias{binData<-}
\alias{binData<-,TornadoExperiment-method}
\alias{binnames}
\alias{binnames,TornadoExperiment-method}
\alias{binnames<-}
\alias{binnames<-,TornadoExperiment-method}
\alias{nbin}
\alias{nbin,TornadoExperiment-method}
\alias{dim,TornadoExperiment-method}
\alias{dimnames,TornadoExperiment-method}
\alias{dimnames<-,TornadoExperiment,list-method}
\alias{dimnames<-,TornadoExperiment,NULL-method}
\alias{[,TornadoExperiment,ANY,ANY,ANY-method}
\alias{colKey}
\alias{colKey,TornadoExperiment-method}
\alias{colKey<-}
\alias{colKey<-,TornadoExperiment,character-method}
\alias{rowKey}
\alias{rowKey,TornadoExperiment-method}
\alias{rowKey<-}
\alias{rowKey<-,TornadoExperiment,character-method}
\alias{binKey}
\alias{binKey,TornadoExperiment-method}
\alias{binKey<-}
\alias{binKey<-,TornadoExperiment,character-method}
\title{TornadoExperiment objects}
\usage{
TornadoExperiment(
  ...,
  binData = DataFrame(),
  colKey = character(),
  rowKey = character(),
  binKey = character()
)
}
\arguments{
\item{...}{
  Arguments passed on to \code{\link[SummarizedExperiment:RangedSummarizedExperiment-class]{SummarizedExperiment::SummarizedExperiment}}
  \describe{
    \item{\code{assays}}{A \code{list} or \code{SimpleList} of matrix-like elements,
    or a matrix-like object (e.g. an ordinary matrix, a data frame,
    a \link[S4Vectors]{DataFrame} object from the \pkg{S4Vectors} package,
    a \link[Matrix]{sparseMatrix} derivative from the \pkg{Matrix} package,
    a \link[DelayedArray]{DelayedMatrix} object from the \pkg{DelayedArray}
    package, etc...).
    All elements of the list must have the same dimensions, and dimension
    names (if present) must be consistent across elements and with the row
    names of \code{rowRanges} and \code{colData}.}
    \item{\code{rowData}}{A \link[S4Vectors]{DataFrame} object describing 
    the rows. Row names, if present, become the row names of the
    SummarizedExperiment object. The number of rows of the
    \link[S4Vectors]{DataFrame} must equal the number of rows of the
    matrices in \code{assays}.}
    \item{\code{rowRanges}}{A \link[GenomicRanges]{GRanges} or
    \link[GenomicRanges]{GRangesList} object describing the ranges of
    interest. Names, if present, become the row names of the
    SummarizedExperiment object. The length of the
    \link[GenomicRanges]{GRanges} or \link[GenomicRanges]{GRangesList}
    must equal the number of rows of the matrices in \code{assays}.
    If \code{rowRanges} is missing, a SummarizedExperiment instance
    is returned.}
    \item{\code{colData}}{An optional \link{DataFrame} describing the
    samples. Row names, if present, become the column names of the
    RangedSummarizedExperiment.}
    \item{\code{metadata}}{An optional \code{list} of arbitrary content
    describing the overall experiment.}
  }}

\item{binData}{A \linkS4class{DataFrame} object with descriptions of the
bins in the 3rd dimension of the array.}

\item{colKey, rowKey, binKey}{A \code{character(1)} containing a column name in the
corresponding data that identify samples, feature sets or bins respectively.
These keys exist mainly such that plotting methods can extract relevant data
less ambiguously.}
}
\value{
A \code{TornadoExperiment} class object.
}
\description{
The TornadoExperiment class extends the \linkS4class{SummarizedExperiment}
class, inheriting their methods and providing greater control over a
3rd dimension of assay data. This constructor is not intended to be called
directly and one should see the TornadoExperiment class merely as a data
container class. Instead, TornadoExperiment objects should spawn from the
use of the \code{\link[=build_tornado]{build_tornado()}} function.
}
\section{Getters}{
In addition to what works for \code{SummarizedExperiment} objects, if \code{x} is a
\code{TornadoExperiment} object, then:
\describe{
\item{\code{nbin(x)}}{gives the number of bins in \code{x}. Analogous to \code{nrow()} and
\code{ncol()} for the 3rd dimension.}
\item{\code{binnames(x)}}{gives the names of the bins in \code{x}. Analogous to
\code{rownames()} and \code{colnames()} but for bins}
\item{\code{binData(x)}}{gets the \code{binData} slot that contains information about
the 3rd dimension of the \code{x}.}
\item{\verb{colKey(x); rowKey(x); binKey(x)}}{retrieve the keys associated with
that dimension of \code{x}.}
}
}

\section{Setters}{
In addition to what works for \code{SummarizedExperiment} objects, if \code{x} is a
\code{TornadoExperiment} object, then:
\describe{
\item{\code{binnames(x) <- value}}{sets the names of the bins in \code{x}.}
\item{\code{binData(x) <- value}}{sets the \code{binData} slot if \code{value} is a
\code{DataFrame} with \code{nbin(x)} rows.}
\item{\verb{colKey(x) <- value; rowKey(x) <- value; binKey(x) <- value}}{sets the
keys associated with dimensions of \code{x} when \code{value} is a \code{character(1)}
object and a valid column name in the relevant data slots.}
}
}

\section{Other methods}{
In addition to what works for \code{SummarizedExperiment} objects, if \code{x} is a
\code{TornadoExperiment} object, then:
\describe{
\item{\code{x[i, j, k]}}{subsets \code{x} for the first (\code{i}), second (\code{j}) and
third (\code{k}) dimension.}
}
}

\examples{
# See ?build_tornado
}
